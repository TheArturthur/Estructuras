; Macros:
swap: MACRO(ra,rb)
	or r1,ra,ra
	or ra,rb,rb
	or rb,r1,r1
ENDMACRO
PUSH: MACRO (reg)
	subu r30, r30, 4
	st ra, r30, 0
ENDMACRO
POP: MACRO (reg)
	ld ra, r30, 0
	addu r30, r30, 4
ENDMACRO
LEA: MACRO(reg, dato)
	or reg, r0, low(dato)
	or.u reg, reg, high(dato)
ENDMACRO

nF: data 0

NFiltrados:			;(r4)
	PUSH(r1)
	LEA(r1,nF)		; r1<- dir(nF)
	ld r4,r30,4		; r4<- oper
	cmp r5,r4,0		; 
	bb1 ne,r5,nFgt0	; if (oper == 0) {
	st r0,r1,0		;   nF = 0;
	addu r29,r0,0	;   return 0;
nFgt0:				; } else {
	ld r2,r1,0
	addu r2,r2,r4	;   nF += oper;
	addu r6,r0,12	; 	r6=12
	cmp r7,r2,r6
	bb1 lt,r7,r6	;   if (nF > r6) {
    add r2,r0,-1	;     nF = -1;
					;   }
	st r2,r1,0
    				; }
    add r29,r2,0	; return nF(r29);
    POP(r1)
    jmp(r1)

Comp:
	PUSH(r1)
	ld r4,r0,0		; r4<- acumulador de diferencias
	ld r5,r30,4		; r5<- Imagen 1
	ld r6,r30,8		; r6<- Imagen 2
	ld r7,r5,0		; r7<- filas Img 1
	ld r8,r5,4		; r8<- columnas Img 1
	mulu r9,r7,r8	; r9<- filas*columnas
	addu r5,r5,8	; r5<- direccion primer elemento Img1
	addu r6,r6,8	; r6<- direccion primer elemento Img2
	or r10,r0,r0 	; r10<- i<- 0
iwcomp:
	cmp r5,?,?     	
	bb1 ?,r5,fwcomp ; while (i<filas*columnas) {
	.......
	br iwcomp		; }
fwcomp:
	.......


	POP(r1)
	jmp(r1)